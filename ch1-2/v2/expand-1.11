; Recursive
(define (f n)
  (if (< n 3)
      n
      (+
        (f (- n 1))
        (* 2 (f (- n 2)))
        (* 3 (f (- n 3))))))

; Example (f 4)
; ===
(+ 
   (f (- 4 1)
      (* 2 (f (- 4 2)))
      (* 3 (f (- 4 3)))))

(+
  (f 3)
  (* 2 (f 2)    
  (* 3 (f 1)))) 

(+
  (+                    ; => Expand (f 3)
    (f (- 3 1))
    (* 2 (f (- 3 2))
    (* 3 (f (- 3 3)))))
  (* 2 2)               ; => (* 2 2)
  (* 3 1))              ; => (* 3 1)

(+ 4 4 3) => 11
