; Explicit-control-evaluator operations

(define eceval-operations
  `(,@primitive-procedures
    (prompt-for-input ,prompt-for-input)
    (read ,read)
    (get-global-environment ,get-global-environment)
    (announce-output ,announce-output)
    (user-print ,user-print)
    ; evaluation
    (self-evaluating? ,self-evaluating?)
    (variable? ,variable?)
    (quoted? ,quoted?)
    (assignment? ,assignment?)
    (definition? ,definition?)
    (if? ,if?)
    (cond? ,cond?)
    (lambda? ,lambda?)
    (begin? ,begin?)
    (compile-and-run? ,compile-and-run?)
    (application? ,application?)
    ; application
    (lookup-variable-value ,lookup-variable-value)
    (text-of-quotation ,text-of-quotation)
    (lambda-parameters ,lambda-parameters)
    (lambda-body ,lambda-body)
    (make-procedure ,make-procedure)
    (make-compiled-procedure ,make-compiled-procedure)
    (operands ,operands)
    (operator ,operator)
    (empty-arglist ,empty-arglist)
    (no-operands? ,no-operands?)
    (first-operand ,first-operand)
    (last-operand? ,last-operand?)
    (adjoin-arg ,adjoin-arg)
    (rest-operands ,rest-operands)
    (primitive-procedure? ,primitive-procedure?)
    (compound-procedure? ,compound-procedure?)
    (compiled-procedure? ,compiled-procedure?)
    (apply-primitive-procedure ,apply-primitive-procedure)
    (procedure-parameters ,procedure-parameters)
    (procedure-environment ,procedure-environment)
    (compiled-procedure-entry ,compiled-procedure-entry)
    (compiled-procedure-env ,compiled-procedure-env)
    (extend-environment ,extend-environment)
    (procedure-body ,procedure-body)
    ; begin
    (begin-actions ,begin-actions)
    (first-exp ,first-exp)
    (last-exp? ,last-exp?)
    (rest-exps ,rest-exps)
    ; if
    (if-predicate ,if-predicate)
    (if-consequent ,if-consequent)
    (if-alternative ,if-alternative)
    (true? ,true?)
    (false? ,false?)
    ; cond
    (cond->if ,cond->if)
    ; assignment
    (assignment-variable ,assignment-variable)
    (assignment-value ,assignment-value)
    (set-variable-value! ,set-variable-value!)
    ; definition
    (definition-variable ,definition-variable)
    (definition-value ,definition-value)
    (define-variable! ,define-variable!)
    ; compilation
    (compile-exp ,compile-exp)
    (compile-and-run-exp ,compile-and-run-exp)))
